//
// my logger :)
//
// by : elyas

const fs = require('fs');
const db = require('db');
const path = require('path');
const date_to_persian = require('date/to_persian');


// export my logger
console._log = log;
console._error = error;
console._info = info;
console._security = security;
console._open = open;
console._very_log = very_log;
console._file_log = _file_log;

// implementing functions
function error(log_string) {
  log(log_string, {
    type: "error",
    color: "red"
  });
};

function info(log_string) {
  log(log_string, {
    type: "info",
    color: "green"
  });
};

function security(log_string) {
  log(log_string, {
    type: "security",
    color: "yellow"
  });
};

function very_log(log_string) {
  log(log_string, {
    type: "very_log",
    color: "green"
  });
};


function _file_log(log_string) {
  file_log(log_string + '\n', "routes", true);
};


function log(log_string, option) {

  option = option || {};

  type = option.type || "info";
  color = option.color || "green";

  string_date(function(date_string) {

    date_string += " ";

    // print it
    if (type == "error") {

      // this will log it in stderr
      console.error(date_string[color] + log_string);
    } else {

      // this will log it in sdtout
      console.log(date_string[color] + log_string);
    }

    // save it to file
    file_log(date_string + log_string + "\n", type);


    // log it in mongodb
    if (global.init.mongo_log) {
      mongo_log(date_string + log_string, type);
    }
  });
};

// console.dir do someting like this
function open(log_string) {

  string_date(function(date_string) {
    date_string += " (open) -> ";
    console.log(date_string.blue + JSON.stringify(log_string, null, "    "));
  });
};


function file_log(log, type, just_file) {

  type = type || "info";

  let d = new Date();

  let month = (d.getMonth() + 1) < 10 ? '0' + (d.getMonth() + 1) : (d.getMonth() + 1);
  let day = d.getDate() < 10 ? '0' + d.getDate() : d.getDate();

  let file_name = d.getFullYear() + '-' + month + '-' + day;

  fs.appendFile(path.join(__dirname, "../logs/" + file_name + ".log"), log, function(err) {
    if (err) return console.error(err);
  });
}

function mongo_log(log_text, type) {

  var log = {
    log: log_text
  };

  if (type) {
    log.type = type;
  }

  new db.logs(log).save(function(err) {
    if (err) console.error(err);
  });
}

// generate a string contain date for begining of log
function string_date(cb) {

  cb = cb || function() {};

  date_to_persian(new Date(), function(date) {
    var d = "";
    d += date.date.substring(2) + " " + date.time;
    cb(d);
  });
}
